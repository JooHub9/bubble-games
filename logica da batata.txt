iniciarJogo()
const posicao = document.querySelectorAll(".bola")
const probVencer = [
    [0, 1, 2, 3],
    [41, 40, 39, 38],
    [7, 8, 9, 10],
    [34, 33, 32, 31],
    [14, 15, 16, 17],
    [27, 26, 25, 24],
    [21, 22, 23, 24],
    [20, 19, 18, 17],
    [28, 29, 30, 31],
    [13, 12, 11, 10],
    [35, 36, 37, 38],
    [6, 5, 4, 3],
    [0, 7, 14, 21],
    [41, 34, 27, 20],
    [1, 8, 15, 22],
    [40, 33, 26, 19],
    [2, 9, 16, 23],
    [39, 32, 25, 18],
    [3, 10, 17, 24],
    [38, 31, 24, 17],
    [4, 11, 18, 25],
    [37, 30, 23, 16],
    [5, 12, 19, 26],
    [36, 29, 22, 15],
    [6, 13, 20, 27],
    [35, 28, 21, 14],
    [0, 8, 16, 24],
    [41, 33, 25, 17],
    [7, 15, 23, 31],
    [34, 26, 18, 10],
    [14, 22, 30, 38],
    [27, 19, 11, 3],
    [35, 29, 23, 17],
    [6, 12, 18, 24],
    [28, 22, 16, 10],
    [13, 19, 25, 31],
    [21, 15, 9, 3],
    [20, 26, 32, 38],
    [36, 30, 24, 18],
    [5, 11, 17, 23],
    [37, 31, 25, 19],
    [4, 10, 16, 22],
    [2, 10, 18, 26],
    [39, 31, 23, 15],
    [1, 9, 17, 25],
    [40, 32, 24, 16],
    [9, 17, 25, 33],
    [8, 16, 24, 32],
    [11, 17, 23, 29],
    [12, 18, 24, 30],
    [1, 2, 3, 4],
    [5, 4, 3, 2],
    [8, 9, 10, 11],
    [12, 11, 10, 9],
    [15, 16, 17, 18],
    [19, 18, 17, 16],
    [22, 23, 24, 25],
    [26, 25, 24, 23],
    [29, 30, 31, 32],
    [33, 32, 31, 30],
    [36, 37, 38, 39],
    [40, 39, 38, 37],
    [7, 14, 21, 28],
    [8, 15, 22, 29],
    [9, 16, 23, 30],
    [10, 17, 24, 31],
    [11, 18, 25, 32],
    [12, 19, 26, 33],
    [13, 20, 27, 34],
]

function verificaVencedor() {
    for (let y = 0; y < probVencer.length; y++) {
        const pos1 = posicao[probVencer[y][0]]
        const pos2 = posicao[probVencer[y][1]]
        const pos3 = posicao[probVencer[y][2]]
        const pos4 = posicao[probVencer[y][3]]

        //verificacao jogador1
        if (
            pos1.classList.contains("jogador1") &&
            pos2.classList.contains("jogador1") &&
            pos3.classList.contains("jogador1") &&
            pos4.classList.contains("jogador1")
        )
        {
            console.log("Jogador 1 ganha")
            //result.innerHTML = 'Player One Wins!'
        }
        //
        if (
            pos1.classList.contains("jogador2") &&
            pos2.classList.contains("jogador2") &&
            pos3.classList.contains("jogador2") &&
            pos4.classList.contains("jogador2")
        )
        {
            console.log("jogador2 ganhou")
            //result.innerHTML = 'Player Two Wins!'
        }
    }
}


//Eventos para aparecer/desaparecer ficha
document.querySelectorAll(".grelha_col").forEach(ficha => {
    ficha.addEventListener("mouseover", function (e) {
        ficha.style.backgroundColor = "#DEDEDE";
    })
    ficha.addEventListener("mouseout", function (e) {
        ficha.style.backgroundColor = "transparent";
    })
})
const probVencer = [
    [0, 0, 0, 0], [1, 1, 1, 1], [2, 2, 2, 2],
    [3, 3, 3, 3], [4, 4, 4, 4], [5, 5, 5, 5],
    [0, 1, 2, 3], [1, 2, 3, 4], [2, 3, 4, 5]
]





            

/*let colunas = document.querySelectorAll(".grelha_col");
let l =document.querySelectorAll(".bola");



colunas=[
    ["vermelho", "vermelho", "amarelo", 0, 0 , 0, 0],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
]

colunas[0][0]/*

//verificacao vertical
for (l = 0; l < 3; l++) {
    for (c = 0; c < 7; c++) {
        if (vencer(colunas[c].querySelectorAll(".bola")[l], jogada[l + 1][c], [l + 2][c], [l + 3][c])) {
            return jogada[l][c];
        }
    }
}
//verificacao horizontal
for (l = 0; l < 6; l++) {
    for (c = 0; c < 4; c++) {
        if (vencer(jogada[l][c], [l][c+1], [l][c+2], [l][c+3])) {
            return jogada[l][c];
        }
    }
}
//verificacao diagonal-direita
for (l = 0; l < 3; l++) {
    for (c = 0; c < 4; c++) {
        if (vencer(jogada[l][c], [l+1][c+1], [l+2][c+2], [l+3][c+3])) {
            return jogada[l][c];
        }

    }
}
//verificacao diagonal-esquerda
for (l = 0; l < 3; l++) {
    for (c = 0; c < 4; c++) {
        if (vencer(jogada[l][c], [l-1][c-1], [l-2][c-2], [l-3][c-3])) {
            return jogada[l][c];
        }
    }
}
}

 */

